(()=>{"use strict";var e={204:(e,t,a)=>{a.r(t)},141:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.bubblesContainer=void 0;var n=a(564),s=a(842),i=a(319);t.bubblesContainer=(0,n.makeElement)("div",{className:"bubbles-container"}),t.bubblesContainer.innerHTML='<div class="bubble-1 bubble">\n      <div class="bubble-1__img bubble-img" ></div>\n    </div>\n    <div class="bubble-2 bubble">\n      <div class="bubble-2__img bubble-img"></div>\n    </div>\n    <div class="bubble-3 bubble">\n      <div class="bubble-3__img bubble-img"></div>\n    </div>\n    <div class="bubble-4 bubble">\n      <div class="bubble-4__img bubble-img"></div>\n    </div>\n    <div class="bubble-5 bubble">\n      <div class="bubble-5__img bubble-img"></div>\n    </div>\n    <div class="bubble-6 bubble">\n      <div class="bubble-6__img bubble-img"></div>\n    </div>\n    ';var l=t.bubblesContainer.querySelectorAll(".bubble");function r(e){var t=i.page.getBoundingClientRect().left,a=i.page.getBoundingClientRect().top,n=e.clientX-t-.5*i.page.offsetWidth,s=e.clientY-a-.5*i.page.offsetHeight;l.forEach((function(e){var t=(.15*n).toFixed(2),a=(.15*s).toFixed(2);e.setAttribute("style","transform: translate3d(".concat(-t,"px, ").concat(-a,"px, 0); transition: none;"))}))}function d(){l.forEach((function(e){e.removeAttribute("style")}))}document.addEventListener("DOMContentLoaded",(function(){i.page.addEventListener("mousemove",r),i.page.addEventListener("mouseout",d)})),s.default.add("next-slide",(function(){t.bubblesContainer.style.transform="translateX(-54.5%)"})),s.default.add("prev-slide",(function(){t.bubblesContainer.style.transform="translateX(0)"}))},630:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.casesContainer=void 0;var n=a(842),s=a(978),i=a(122),l=a(564),r=a(231);t.casesContainer=(0,l.makeElement)("div",{className:"cases",attribute:{name:"data",value:"visible"}});var d=(0,l.makeElement)("div",{className:"cases__bg-img"}),c=(0,l.makeElement)("div",{className:"cases__wrapper"}),o=(0,l.makeElement)("h2",{className:"cases__title  visible",content:"".concat(s.default[i.state.currentSlide]["cases-title"])}),u=(0,l.makeElement)("p",{className:"cases__description  visible",content:"".concat(s.default[i.state.currentSlide]["cases-description"])}),b=(0,l.makeElement)("div",{className:"cases__btn-container"}),f=(0,l.makeElement)("button",{className:"cases__btn-prev btn btn--disabled",attribute:[{name:"data",value:"prev"}]}),v=(0,l.makeElement)("button",{className:"cases__btn-next btn",attribute:{name:"data",value:"next"}}),m=(0,l.makeElement)("table",{className:"cases__features features"});function p(){o.classList.toggle("visible"),o.classList.toggle("hidden"),u.classList.toggle("visible"),u.classList.toggle("hidden"),m.querySelectorAll(".feature__text").forEach((function(e){e instanceof HTMLElement&&(e.classList.toggle("visible"),e.classList.toggle("hidden"))}))}function _(){p()}m.innerHTML='<tr class="feature__row">\n      <td class="feature__column">\n        <h3 class="feature__title">Направление</h3>\n        <p class="feature__text visible">'.concat(s.default[i.state.currentSlide].features[0],'</p>\n      </td>\n      <td class="feature__column">\n        <h3 class="feature__title">Тип проекта</h3>\n        <p class="feature__text  visible">').concat(s.default[i.state.currentSlide].features[1],'</p>\n      </td>\n      <td class="feature__column">\n        <h3 class="feature__title">Отрасль</h3>\n        <p class="feature__text  visible">').concat(s.default[i.state.currentSlide].features[2],"</p>\n      </td>\n    </tr>"),b.append(f,v),c.append(o,u,b,m),t.casesContainer.append(d,c),b.addEventListener("click",(function(e){var t=e.target;if(t instanceof HTMLButtonElement){if(t.className.includes("disabled"))return;"next"==t.getAttribute("data")?(0,i.slideToNext)():(0,i.slideToPrev)()}})),t.casesContainer.addEventListener("animationend",(function(e){"hide"===e.animationName&&(o.innerHTML="".concat(s.default[i.state.currentSlide]["cases-title"]),u.innerHTML="".concat(s.default[i.state.currentSlide]["cases-description"]),m.querySelectorAll(".feature__text").forEach((function(e,t){e.innerHTML="".concat(s.default[i.state.currentSlide].features[t])})),p())})),v.addEventListener("mouseover",r.changeCursor),v.addEventListener("mouseout",r.changeCursor),f.addEventListener("mouseover",r.changeCursor),f.addEventListener("mouseout",r.changeCursor),n.default.add("disable-handlers-on-prev-slide",(function(){f.classList.add("btn--disabled")})),n.default.add("disable-handlers-on-next-slide",(function(){v.classList.add("btn--disabled")})),n.default.add("active-handlers-on-prev-slide",(function(){f.classList.remove("btn--disabled")})),n.default.add("active-handlers-on-next-slide",(function(){v.classList.remove("btn--disabled")})),n.default.add("next-slide",_),n.default.add("prev-slide",_)},231:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.changeCursor=t.cursor=void 0;var n=a(564),s=a(319);function i(e){var a=e.clientX-s.page.offsetLeft,n=e.clientY-s.page.offsetTop;t.cursor.style.transform="translate3d(".concat(a-t.cursor.offsetWidth/2,"px, ").concat(n-t.cursor.offsetHeight/2,"px, 0)")}t.cursor=(0,n.makeElement)("div",{className:"cursor"}),t.changeCursor=function(e){"mouseover"===e.type?(t.cursor.style.width="100px",t.cursor.style.height="100px"):"mouseout"===e.type&&t.cursor.removeAttribute("style")},document.addEventListener("DOMContentLoaded",(function(){s.page.addEventListener("mousemove",i)}))},225:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.laptopContainer=void 0;var n=a(122),s=a(564),i=a(842);t.laptopContainer=(0,s.makeElement)("div",{className:"laptop-container"});var l=(0,s.makeElement)("div",{className:"slider"}),r=(0,s.makeElement)("div",{className:"slides"}),d=(0,s.makeElement)("img",{className:"slides__slide-1"}),c=(0,s.makeElement)("img",{className:"slides__slide-2"});d.src="./img/slide1.png",c.src="./img/slide2.png",r.append(d,c),l.appendChild(r),t.laptopContainer.appendChild(l),r.addEventListener("transitionstart",(function(){window.removeEventListener("wheel",n.scrollSlides)})),r.addEventListener("transitionend",(function(){window.addEventListener("wheel",n.scrollSlides)})),i.default.add("next-slide",(function(){r.style.transform="translateX(-750px)"})),i.default.add("prev-slide",(function(){r.style.transform="translateX(0)"}))},319:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.page=void 0;var n=a(564),s=a(842),i=a(978),l=a(122),r=a(254),d=a(225),c=a(630),o=a(141),u=a(231);function b(){t.page.style.backgroundColor="".concat(i.default[l.state.currentSlide].background)}t.page=(0,n.makeElement)("div",{className:"page-cases"}),t.page.append(o.bubblesContainer,r.mainTitle,d.laptopContainer,c.casesContainer,u.cursor),window.addEventListener("wheel",l.scrollSlides),s.default.add("next-slide",b),s.default.add("prev-slide",b)},254:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.mainTitle=void 0;var n=a(564);t.mainTitle=(0,n.makeElement)("h1",{className:"main-title",content:"Кейсы"})},122:(e,t,a)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.scrollSlides=t.slideToNext=t.slideToPrev=t.state=void 0;var n=a(842);function s(){0===t.state.currentSlide?n.default.dispatch("disable-handlers-on-prev-slide"):0!==t.state.currentSlide&&n.default.dispatch("active-handlers-on-prev-slide"),t.state.currentSlide===t.state.quantitySlides?n.default.dispatch("disable-handlers-on-next-slide"):t.state.currentSlide!==t.state.quantitySlides&&n.default.dispatch("active-handlers-on-next-slide")}function i(){0!==t.state.currentSlide&&(t.state.currentSlide-=1,n.default.dispatch("prev-slide"),s())}function l(){t.state.currentSlide!==t.state.quantitySlides&&(t.state.currentSlide+=1,n.default.dispatch("next-slide"),s())}t.state={quantitySlides:1,currentSlide:0},t.slideToPrev=i,t.slideToNext=l,t.scrollSlides=function(e){e.deltaY>0?l():i()}},978:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=[{"cases-title":"Создание корпоративного сайта<br> для холдинга «АМКОДОР»","cases-description":"Разработать и запустить корпоративный сайт для<br> холдинга “АМКОДОР” для развития дилерской сети на рынках Беларуси и стран СНГ.",features:["WEB-разработка","Корпоративные сайты","Производство, Торговля"],background:"#8DBDBA"},{"cases-title":"Создание маркетплейса для бизнеса по перепродаже одежды","cases-description":"Brands&Charity — благотворительная онлайн — платформа для перепродажи брендовых вещей, цель которой превратить ненужные одним людям вещи в полезный ресурс для других.",features:["WEB-разработка","Интернет-магазины","Торговля"],background:"#8675BA"}]},564:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.makeElement=void 0,t.makeElement=function(e,t){var a=t.content,n=t.className,s=t.attribute,i=document.createElement(e);return n&&(i.className=n),a&&(i.innerHTML=a),Array.isArray(s)?s.forEach((function(e){return i.setAttribute("".concat(e.name),"".concat(e.value))})):s&&i.setAttribute("".concat(s.name),"".concat(s.value)),i}},842:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(){this.listeners=[]}return e.prototype.add=function(e,t){this.listeners.push({name:e,callback:t})},e.prototype.remove=function(e,t){var a=this;this.listeners.forEach((function(n,s){e===n.name&&t===n.callback&&a.listeners.splice(s,1)}))},e.prototype.dispatch=function(e){for(var t=[],a=1;a<arguments.length;a++)t[a-1]=arguments[a];this.listeners.filter((function(t){return t.name===e})).forEach((function(e){return e.callback.apply(e,t)}))},e}();t.default=new a}},t={};function a(n){var s=t[n];if(void 0!==s)return s.exports;var i=t[n]={exports:{}};return e[n](i,i.exports,a),i.exports}a.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{a(204);var e=a(564),t=a(319),n=(0,e.makeElement)("div",{className:"root"});n.append(t.page),document.body.appendChild(n)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,